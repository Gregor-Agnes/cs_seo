plugin.tx_csseo {
    hreflang {
        enable = {$plugin.tx_csseo.hreflang.enable}
        ids = {$plugin.tx_csseo.hreflang.ids}
        keys = {$plugin.tx_csseo.hreflang.keys}
        gp {

        }
    }
    social {
        defaultImage = {$plugin.tx_csseo.social.defaultImage}
        twitter {
            creator = {$plugin.tx_csseo.social.twitter.creator}
        }
    }
    tracking {
        googleAnalytics = {$plugin.tx_csseo.tracking.googleAnalytics}
        piwik = {$plugin.tx_csseo.tracking.piwik}
        piwik.id = {$plugin.tx_csseo.tracking.piwik.id}
    }
}

lib.currentUrl = TEXT
lib.currentUrl {
    typolink {
        parameter.data = page:tx_csseo_canonical // page:content_from_pid // page:uid
        forceAbsoluteUrl = 1
        returnLast = url
        addQueryString = 1
        addQueryString.exclude = cHash
    }
}

### Title Tag ###
config {
    pageTitleFirst = 1
    pageTitleSeparator = |
    pageTitleSeparator.noTrimWrap = | | |
    titleTagFunction = Clickstorm\CsSeo\UserFunc\PageTitle->render
}

page {
    meta {
        ### General Meta Tags ###
        description.field = description

        ### Exclude from search engines ###
        robots = noindex,nofollow
        robots.if.isTrue.field = tx_csseo_no_index
    }

    ### SEO & Social Meta ###
    headerData.654 = COA
    headerData.654 {
        ### canonical ###
        10 =< lib.currentUrl
        10 {
            wrap = <link rel="canonical" href="|" />
            if.isFalse.field = tx_csseo_no_index
        }

        ### hreflang ###
        20 = HMENU
        20 {
            if {
                isTrue < plugin.tx_csseo.hreflang.enable
                isFalse.data = page:tx_csseo_canonical // page:tx_csseo_no_index // page:content_from_pid
            }
            special = language
            special.value < plugin.tx_csseo.hreflang.ids

            1 = TMENU
            1 {
                # Set hreflang for not-active languages
                NO = 1
                NO {
                    stdWrap.cObject = COA
                    stdWrap.cObject {
                        1 = LOAD_REGISTER
                        1 {
                            lParam.cObject = TEXT
                            lParam.cObject {
                                value < plugin.tx_csseo.hreflang.ids
                                listNum {
                                    stdWrap.data = register:count_HMENU_MENUOBJ
                                    stdWrap.wrap = |-1
                                    splitChar = ,
                                }
                            }
                            lLabel.cObject = TEXT
                            lLabel.cObject {
                                value < plugin.tx_csseo.hreflang.keys
                                listNum {
                                    stdWrap.data = register:count_HMENU_MENUOBJ
                                    stdWrap.wrap = |-1
                                    splitChar = ,
                                }
                            }
                        }

                        10 = TEXT
                        10.data = register:lLabel
                        10.wrap = <link rel="alternate" hreflang="|"

                        20 = TEXT
                        20 {
                            typolink {
                                parameter.data = page:uid
                                additionalParams.data = register:lParam
                                additionalParams.wrap = &L=|
                                returnLast = url
                                forceAbsoluteUrl = 1
                            }
                            noTrimWrap = | href="|" />|
                        }

                    }
                    doNotLinkIt = 1
                }

                # Set hreflang for active languages
                ACT = 1
                ACT <= .NO

                # Don't show hreflang for not localized languages
                USERDEF1 = 1
                USERDEF1.doNotShowLink = 1
            }
        }

        ### Open graph ###
        30 = COA
        30 {
            ### og:type ###
            5 = TEXT
            5.value = <meta property="og:type" content="website" />

            ### og:title ###
            10 = TEXT
            10.data = page:tx_csseo_og_title // page:title
            10.wrap = <meta property="og:title" content="|" />

            ### og:description ###
            20 = TEXT
            20.data = page:tx_csseo_og_description // page:description
            20.wrap = <meta property="og:description" content="|" />
            20.required = 1

            ### og:url ###
            30 =< lib.currentUrl
            30.wrap = <meta property="og:url" content="|" />

            ### og:site_name ###
            40 = TEXT
            40 {
                data = TSFE:tmpl|sitetitle
                wrap = <meta property="og:site_name" content="|" />
            }

            ### og:image ###
            50 = FILES
            50 {
                references {
                    table = pages
                    uid.data = page:uid
                    fieldName = tx_csseo_og_image
                }
                renderObj = IMG_RESOURCE
                renderObj {
                    file.import.data = file:current:publicUrl
                    file.height = 628c
                    file.width  = 1200
                    stdWrap.dataWrap = <meta property="og:image" content="{TSFE:baseUrl}|" />
                }
            }

            ### default og:image ###
            55 = IMG_RESOURCE
            55 {
                stdWrap.if.isFalse.field = tx_csseo_og_image
                file = {$plugin.tx_csseo.social.defaultImage}
                file.height = 628c
                file.width  = 1200
                stdWrap.dataWrap = <meta property="og:image" content="{TSFE:baseUrl}|" />
            }
        }

        ### Enable Twitter Cards ###
        35 = TEXT
        35.value = <meta name="twitter:card" content="summary" />

        ### Twitter Cards Properties ###
        40 = COA
        40 {
            ### twitter:title ###
            10 = TEXT
            10 {
                data = page:tx_csseo_tw_title
                wrap = <meta name="twitter:title" content="|" />
                required = 1
            }

            ### twitter:description ###
            20 = TEXT
            20 {
                data = page:tx_csseo_tw_description
                wrap = <meta name="twitter:description" content="|" />
                required = 1
            }

            ### twitter:author ###
            30 = TEXT
            30 {
                data = page:tx_csseo_tw_creator
                wrap = <meta name="twitter:site" content="@|" />
                ifEmpty = {$plugin.tx_csseo.social.twitter.creator}
                required = 1
            }

            ### twitter:image ###
            40 = FILES
            40 {
                references {
                    table = pages
                    uid.data = page:uid
                    fieldName = tx_csseo_tw_image
                }
                renderObj = IMG_RESOURCE
                renderObj {
                    file.import.data = file:current:publicUrl
                    file.height = 512c
                    file.width  = 1024
                    stdWrap.dataWrap = <meta name="twitter:image" content="{TSFE:baseUrl}|" />
                }
            }

            ### default og:image ###
            45 = IMG_RESOURCE
            45 {
                stdWrap.if.isFalse.field = tx_csseo_tw_image
                file = {$plugin.tx_csseo.social.defaultImage}
                file.height = 512c
                file.width  = 1024
                stdWrap.dataWrap = <meta property="twitter:image" content="{TSFE:baseUrl}|" />
            }
        }
    }

    includeJSFooter {
        654 = EXT:cs_seo/Resources/Public/JavaScript/jquery.cs_seo.ga.js
        654.if.isTrue < plugin.tx_csseo.googleAnalytics
    }

    jsFooterInline {
        654 = COA
        654 {
            ### Google Analytics ###
            10 = TEXT
            10 {
                value = {$plugin.tx_csseo.tracking.googleAnalytics}
                wrap (
                    // Google Analytics
                    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
                    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

                    ga('create', '#', 'auto');
                    ga('set', 'anonymizeIp', true);
                    ga('send', 'pageview');
                )
                wrap.splitChar = #
                required = 1
            }

            ### PIWIK ###
            20 = TEXT
            20 {
                value = {$plugin.tx_csseo.tracking.piwik}
                wrap (
                 // Piwik
                 var _paq = _paq || [];
                  _paq.push(['trackPageView']);
                  _paq.push(['enableLinkTracking']);
                  (function() {
                    var u="//#/";
                    _paq.push(['setTrackerUrl', u+'piwik.php']);
                    _paq.push(['setSiteId', {$plugin.tx_csseo.tracking.piwik.id}]);
                    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
                    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);
                  })();
                )
                wrap.splitChar = #
                required = 1
            }
        }
    }
}

### Disable Tracking if Backend User detected ###
[globalVar = TSFE:beUserLogin > 0]
    page.jsFooterInline.654 >
    page.includeJSFooter.654 >
[end]

### copy page for preview wizard ###
pageCsSeo = PAGE
pageCsSeo {
    typeNum = 654

    config {
        disableAllHeaderCode = 1
        xhtml_cleaning = 0
        admPanel = 0
        debug = 0
        removeDefaultJS = 1
        removeDefaultCss = 1
        removePageCss = 1
        INTincScript_ext.pagerender = 1
    }

    meta < page.meta

    10 = TEXT
    10.value = Page Properties loaded
}